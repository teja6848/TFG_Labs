{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sai Teja\\\\Desktop\\\\react-todo-app-v1-master\\\\react-todo-app-v1-master\\\\src\\\\components\\\\TodoList.js\";\nimport React, { useEffect, useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport db from \"../firebase\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  const getAllData = () => {\n    db.collection(\"ActiveData\").get().then(snapchat => {\n      let studentList = [];\n      snapchat.forEach(snap => {\n        studentList.push(snap.val());\n      });\n      console.log(studentList, \"lll\");\n    }).catch(error => {});\n  };\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => item.id === todoId ? newValue : item));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n    setTodos(removedArr);\n    db.collection(\"ActiveData\").doc(todos[0].id).delete().then(() => {}).catch(error => {});\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \" \"), /*#__PURE__*/React.createElement(TodoForm, {\n    onSubmit: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Todo, {\n    todos: todos,\n    completeTodo: completeTodo,\n    removeTodo: removeTodo,\n    updateTodo: updateTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/Sai Teja/Desktop/react-todo-app-v1-master/react-todo-app-v1-master/src/components/TodoList.js"],"names":["React","useEffect","useState","TodoForm","Todo","db","TodoList","todos","setTodos","getAllData","collection","get","then","snapchat","studentList","forEach","snap","push","val","console","log","catch","error","addTodo","todo","text","test","newTodos","updateTodo","todoId","newValue","prev","map","item","id","removeTodo","removedArr","filter","doc","delete","completeTodo","updatedTodos","isComplete"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\nimport db from \"../firebase\";\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    getAllData();\n  },[]);\n  \n\n  const getAllData = () => {\n\ndb.collection(\"ActiveData\")\n.get()\n.then((snapchat) => {\n  let studentList = [];\n  snapchat.forEach(snap => {\n    studentList.push(snap.val());\n  })\n  console.log(studentList,\"lll\");\n})\n.catch((error) => {\n});\n\n  }\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\nsetTodos(removedArr);\n\ndb.collection(\"ActiveData\")\n.doc(todos[0].id).delete()\n.then(() => {\n})\n.catch((error) => {\n});\n    \n\n\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <>\n      <h1> </h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}